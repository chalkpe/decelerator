generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model App {
  domain       String @id
  clientId     String
  clientSecret String
  redirectUri  String
}

model ReblogNotification {
  domain         String
  notificationId String
  createdAt      DateTime

  userId    String
  statusId  String
  accountId String

  reactionId String?
  reaction   StatusIndex? @relation(fields: [domain, reactionId], references: [domain, statusId])

  @@unique([domain, notificationId])
  @@map("reblog_notification")
}

model StatusIndex {
  domain    String
  statusId  String
  createdAt DateTime

  accountId String
  reblogId  String?

  notifications ReblogNotification[]

  @@unique([domain, statusId])
  @@map("status_index")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  domain     String
  username   String
  mastodonId String

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
